<?php
/**
 * NOTICE OF LICENSE
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/afl-3.0.php
 *
 * @author    yourName
 * @copyright since 2023 
 * @license   https://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 * 
 * @generated by PrestashopConsole  / copyright since 2016 Hennes HervÃ© https://www.h-hennes.fr/blog/
 */
 
if (!defined('_PS_VERSION_')) {
    exit;
}

use PrestaShop\PrestaShop\Core\Module\WidgetInterface;

class Prestaweb extends Module implements WidgetInterface {

public function __construct()
{
    $this->name = 'prestaweb';
    $this->tab = 'others';
    $this->version = '0.1.0';
    $this->author = 'Anton Shakhmatov';
    $this->bootstrap = true;
    parent::__construct();

    $this->displayName = $this->l('Kritek');
    $this->description = $this->l('module that on all frontend pages inserts theS');
}

/**
 * Installation du module
 * @return bool
 */
public function install()
{
    return parent::install() && $this->installTab() && $this->registerHook(['displayHeader']);
}

public function uninstall() : Bool
{
    return parent::uninstall() && $this->uninstallTab();
}

protected function installTab()
{
    $tab = new Tab();
    $tab->active = 1;
    $tab->class_name = 'AdminCustomModule';
    $tab->name = array();

    foreach (Language::getLanguages(true) as $lang) {
        $tab->name[$lang['id_lang']] = $this->l('Custom Module');
    }

    $tab->id_parent = (int) Tab::getIdFromClassName('IMPROVE');
    $tab->module = $this->name;
    $tab->add();

    return true;
}

protected function uninstallTab()
{
    $idTab = (int) Tab::getIdFromClassName('AdminCustomModule');
    if ($idTab) {
        $tab = new Tab($idTab);
        $tab->delete();
        return true;
    }
    return false;
}


/**
 * Function displayHeaderdescription 
 * @param array $params
 * @return mixed
 */
public function hookDisplayHeader($params){
    return $this->display(__FILE__,"views/templates/hook/displayHeader.tpl");
}



 public function renderWidget($hookName = null, array $configuration = [])
    {
        //@TODO Implements RenderWidgetMethod
    }

    public function getWidgetVariables($hookName = null, array $configuration = [])
    {
     //@TODO Implements getWidgetVariables
    }

}
